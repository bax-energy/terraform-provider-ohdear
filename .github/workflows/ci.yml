name: Github CI

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v6.5.2
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  versions:
    runs-on: ubuntu-latest
    steps:
      - name: Get Terraform versions
        id: versions
        run: |
          echo "terraform=$(curl -sL https://releases.hashicorp.com/terraform/index.json | jq -c '[
            .versions | keys | .[] |
            { version: ., semver: capture("(?<major>[0-9]+).(?<minor>[0-9]+).(?<patch>[0-9]+)(?<pre>.*)") } |
            select(.semver.pre == "") |
            {
                version: .version,
                group: (.semver.major + "." + .semver.minor),
                major: .semver.major | tonumber,
                minor: .semver.minor | tonumber,
                patch: .semver.patch | tonumber
            }
          ] | group_by(.group) | [ .[] | sort_by(.patch) | .[-1] | .version ] |
          sort_by(.|split(".")|map(tonumber)) | .[-2:]')" >> "$GITHUB_OUTPUT"
    outputs:
      terraform: ${{ steps.versions.outputs.terraform }}

  test:
    runs-on: ubuntu-latest
    needs: versions
    timeout-minutes: 15
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        terraform: ${{ fromJSON(needs.versions.outputs.terraform) }}
    concurrency:
      group: test
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true
      - run: make testacc
        env:
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
          OHDEAR_APY_KEY: ${{ secrets.OHDEAR_TOKEN }}
          OHDEAR_TEAM_ID: ${{ secrets.OHDEAR_TEAM_ID }}